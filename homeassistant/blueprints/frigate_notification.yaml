blueprint:
  name: Frigate Notifications (with Audio + Dynamic Notify)
  description: >
    Sends notifications from Frigate for detected objects and audio alerts.
    Includes snapshots, links to the Frigate event video, and allows you
    to enter any notify.* service name (device, group, or integration).
  domain: automation
  input:
    notify_service:
      name: Notify service
      description: >
        Enter the notify service to use (e.g. notify.mobile_app_myphone,
        notify.family, notify.telegram).
      default: "notify.mobile_app_myphone"
      selector:
        text: {}
    camera:
      name: Camera
      description: The camera entity id to monitor
      selector:
        entity:
          domain: camera

mode: queued
max: 10

trigger:
  # Object detection "end" events
  - platform: mqtt
    topic: frigate/events
    value_template: "{{ value_json['type'] }}"
    payload: "end"

  # Audio detection events
  - platform: mqtt
    topic: frigate/events
    value_template: "{{ value_json['type'] }}"
    payload: "audio"

variables:
  event_type: "{{ trigger.payload_json['type'] }}"
  camera: "{{ trigger.payload_json['camera'] | default('unknown') }}"
  event_id: "{{ trigger.payload_json['after']['id'] | default('') }}"
  label: >
    {% if event_type == 'audio' %}
      Audio Alert
    {% else %}
      {{ trigger.payload_json['after']['label'] | default('motion') }}
    {% endif %}
  snapshot_url: >
    {% if event_type == 'audio' %}
      {{ '' }}
    {% else %}
      {{ trigger.payload_json['after']['thumbnail'] | default('') }}
    {% endif %}
  # Frigate event deep link (works for audio + object)
  ha_url: >
    {{ 'homeassistant://navigate/lovelace/frigate/event/' ~ event_id if event_id else '' }}

action:
  - choose:
      # Handle Audio events
      - conditions: "{{ event_type == 'audio' }}"
        sequence:
          - service: !input notify_service
            data:
              title: "ðŸ”Š Frigate Audio Alert"
              message: "Audio alert detected on {{ camera }}"
              data:
                tag: "frigate-audio-{{ camera }}"
                sticky: "true"
                clickAction: "{{ ha_url }}"

      # Handle Object detection events
      - conditions: "{{ event_type == 'end' }}"
        sequence:
          - service: !input notify_service
            data:
              title: "ðŸš¨ Frigate Alert"
              message: "{{ label | title }} detected on {{ camera }}"
              data:
                image: "{{ snapshot_url }}"
                tag: "frigate-{{ camera }}"
                sticky: "true"
                clickAction: "{{ ha_url }}"
