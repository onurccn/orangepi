blueprint:
  name: Frigate Notifications (Audio + Dynamic Notify + Custom Topic)
  description: >
    Sends notifications from Frigate for detected objects and audio alerts.
    Includes snapshots, links to the Frigate event video, and allows you
    to enter any notify.* service name (device, group, or integration).
    Also supports customizing the MQTT topic (default: frigate/events).
  domain: automation
  input:
    notify_service:
      name: Notify service
      description: >
        Enter the notify service to use (e.g. notify.mobile_app_myphone,
        notify.family, notify.telegram).
      default: "notify.mobile_app_myphone"
      selector:
        text: {}
    mqtt_topic:
      name: MQTT Topic
      description: >
        The MQTT topic where Frigate publishes events (default: frigate/events).
      default: "frigate/events"
      selector:
        text: {}
    camera:
      name: Camera
      description: The camera entity id to monitor
      selector:
        entity:
          domain: camera

mode: queued
max: 10

trigger:
  # Object detection "end" events
  - platform: mqtt
    topic: !input mqtt_topic
    value_template: "{{ value_json['type'] }}"
    payload: "end"

  # Audio detection events
  - platform: mqtt
    topic: !input mqtt_topic
    value_template: "{{ value_json['type'] }}"
    payload: "audio"

variables:
  event_type: "{{ trigger.payload_json['type'] }}"
  camera: "{{ trigger.payload_json['camera'] | default('unknown') }}"
  event_id: "{{ trigger.payload_json['after']['id'] | default('') }}"
  label: >
    {% if event_type == 'audio' %}
      Audio Aler
