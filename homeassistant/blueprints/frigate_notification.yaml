blueprint:
  name: Frigate Notifications (Objects + Audio + Preview GIF)
  description: >
    Sends notifications from Frigate for detected objects and audio alerts.
    Includes GIF previews, deep links to event video, and works with
    any notify.* service (device, group, etc.).
  domain: automation
  input:
    notify_service:
      name: Notify service
      description: >
        Enter the notify service to use (e.g. notify.mobile_app_myphone,
        notify.family, notify.telegram).
      default: "notify.mobile_app_myphone"
      selector:
        text: {}
    mqtt_topic:
      name: MQTT Topic
      description: >
        The MQTT topic where Frigate publishes events (default: frigate/events).
      default: "frigate/events"
      selector:
        text: {}
    base_url:
      name: Home Assistant Base URL
      description: >
        Optional. If left empty, will use Home Assistant's configured external URL.
      default: ""
      selector:
        text: {}
    client_id:
      name: Frigate Client ID
      description: >
        The Frigate instance name (default: frigate).
      default: "frigate"
      selector:
        text: {}
    camera:
      name: Camera
      description: The camera entity id to monitor
      selector:
        entity:
          domain: camera

mode: queued
max: 10

trigger:
  # Only need to listen for "end" events
  - platform: mqtt
    topic: !input mqtt_topic
    value_template: "{{ value_json['type'] }}"
    payload: "end"

variables:
  # Pull base_url from input or fallback to HA external_url
  input_base_url: !input base_url
  resolved_base_url: >
    {{ input_base_url if input_base_url != '' else hass.config.external_url }}

  event_type: "{{ trigger.payload_json['type'] }}"
  camera: "{{ trigger.payload_json['after']['camera'] | default('unknown') }}"
  event_id: "{{ trigger.payload_json['after']['id'] | default('') }}"
  audio: "{{ trigger.payload_json['after']['data']['audio'] | default([]) }}"
  label: >
    {% if audio | length > 0 %}
      Audio: {{ audio | join(', ') }}
    {% else %}
      {{ trigger.payload_json['after']['label'] | default('motion') }}
    {% endif %}
  snapshot_url: >
    {{ resolved_base_url }}/api/frigate/{{ !input client_id }}/notifications/{{ event_id }}/review_preview.gif
  ha_url: >
    {{ 'homeassistant://navigate/lovelace/frigate/event/' ~ event_id if event_id else '' }}

action:
  - choose:
      # Handle Audio events
      - conditions: "{{ audio | length > 0 }}"
        sequence:
          - service: !input notify_service
            data:
              title: "ðŸ”Š Frigate Audio Alert"
              message: "Audio detected ({{ audio | join(', ') }}) on {{ camera }}"
              data:
                tag: "frigate-audio-{{ camera }}"
                sticky: "true"
                image: "{{ snapshot_url }}"
                clickAction: "{{ ha_url }}"

      # Handle Object detection events (if no audio)
      - conditions: "{{ audio | length == 0 }}"
        sequence:
          - service: !input notify_service
            data:
              title: "ðŸš¨ Frigate Alert"
              message: "{{ label | title }} detected on {{ camera }}"
              data:
                image: "{{ snapshot_url }}"
                tag: "frigate-{{ camera }}"
                sticky: "true"
                clickAction: "{{ ha_url }}"
